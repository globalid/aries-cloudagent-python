version: "3"
services:
 
  caddy:
    image: caddy:2.5.1-alpine
    restart: unless-stopped
    command: caddy reverse-proxy --from https://localhost:3001 --to http://agent:3001
    ports:
      - 3002:3001
    networks:
      - app-network

  agent:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile.globalid
    environment:
      - ACAPY_ENDPOINT=http://localhost:3000
      - ACAPY_NO_LEDGER=true
      - ACAPY_ADMIN_INSECURE_MODE=true
      - ACAPY_WALLET_TYPE=askar
      - ACAPY_TRACE=true
      - ACAPY_LOG_LEVEL=DEBUG
      - ACAPY_WALLET_STORAGE_TYPE=postgres_storage
      - ACAPY_WALLET_STORAGE_CONFIG={"url":"postgres"}
      - ACAPY_WALLET_STORAGE_CREDS={"account":"root","password":"root","admin_account":"root","admin_password":"root"}
      - ACAPY_WALLET_NAME=acapy_custodial_agency
      - ACAPY_MULTITENANT=true
      - ACAPY_MULTITENANT_ADMIN=true
      - ACAPY_MULTITENANT_JWT_SECRET=secret
      - ACAPY_MULTITENANCY_CONFIGURATION={"wallet_type":"askar-profile","wallet_name":"askar-profile-name"}
      - ACAPY_WALLET_KEY=3znvA1Fq5qbx6vumL6dAKpYjE3H1Zk1x7xLLhLNo6AqU
      - ACAPY_WALLET_KEY_DERIVATION_METHOD=raw
      - ACAPY_AUTO_STORE_CREDENTIAL=true
      - ACAPY_AUTO_PROVISION=true
      - ACAPY_AUTO_RESPOND_CREDENTIAL_REQUEST=true
      - ACAPY_EMIT_NEW_DIDCOMM_PREFIX=true
      - ACAPY_PRESERVE_EXCHANGE_RECORDS=true
      - ACAPY_GENESIS_URL=https://raw.githubusercontent.com/Indicio-tech/indicio-network/master/genesis_files/pool_transactions_testnet_genesis
      - RUST_LOG=trace,indy::=trace
      - RUST_BACKTRACE=1
    # volumes:
    #   - sqlite-db:/home/user/.aries_cloudagent:consistent
    command: >
      start --admin 0.0.0.0 3001 -it http 0.0.0.0 3000 -ot http
        --plugin acapy_cache_redis.v0_1
        --plugin-config-value redis_cache.connection="redis://redis-host:6379/0"
    ports:
      - 3001:3001
    depends_on:
      redis-host:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    image: postgres:9.5
#    user: "501:20"
    hostname: postgres
    restart: unless-stopped
    ports: # Uncomment to access postgres outside of containers
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - app-network
    volumes:
      - postgres-db:/var/lib/postgresql/data:consistent
#      - ./postgres-db:/var/lib/postgresql/data:consistent

  redis-host:
    image: "redis:alpine"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
    ports:
      - "6379:6379"
    # volumes:
    #   - ./redis-data:/var/lib/redis
    #   - ./redis.conf:/etc/redis/redis.conf:ro,z
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - app-network

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: ghcr.io/joeferner/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis-host:6379
    ports:
      - "8081:8081"
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

volumes:
  postgres-db:
  # sqlite-db:
